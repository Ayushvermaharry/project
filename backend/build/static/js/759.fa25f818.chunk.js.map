{"version":3,"file":"static/js/759.fa25f818.chunk.js","mappings":"uSAoBe,SAASA,EAAQC,GAE9B,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,MACAC,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIN,EAAMO,IAClB,IAAIC,EAAOC,aAAaC,QAAQ,QAC1BC,EAAS,CACbC,QAAS,CACPC,cAAeC,KAAKC,MAAMP,GAAMQ,KAAKC,QAGzCC,IAAAA,IAAA,sDACsDlB,EAAMO,IAAMI,GAC/DQ,MAAK,SAACC,GACLjB,EAAWiB,EAAIC,KAAKC,KACpBjB,QAAQC,IAAIc,EAAIC,KAAKC,UAExB,CAACnB,IAmBJ,IAAMoB,EAAO,GAOb,OANArB,EAAQsB,KAAI,SAACC,EAAMC,GACjB,OAAOH,EAAKI,MA/CIpB,EAgDHmB,EAAQ,EAhDDE,EAgDIH,EAAKI,KAhDKC,EAgDCL,EAAKM,OAhDGC,EA4B7C,SAAiBC,GACf,IAAIC,EAAO,IAAIC,KAAKF,GACpB,OACEC,EAAKE,cACL,KACCF,EAAKG,WAAa,GACnB,IACAH,EAAKI,UACL,KACAJ,EAAKK,WACL,IACAL,EAAKM,aACL,IACAN,EAAKO,aAOyCC,CAAQjB,EAAKS,MA/CxD,CACL3B,GAAAA,EACAqB,aAAAA,EACAE,QAAAA,EACAE,SAAAA,KALJ,IAAoBzB,EAAIqB,EAAcE,EAASE,MAqD3C,SAACW,EAAA,EAAD,CAAgBC,UAAWC,EAAAA,EAA3B,UACE,UAACC,EAAA,EAAD,CAAOC,GAAI,CAAEC,SAAU,KAAO,aAAW,eAAzC,WACE,SAACC,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,YACE,UAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,MAAO,QAAUC,UAAU,aAA/C,eACK,QAEL,SAACH,EAAA,EAAD,CAAWC,MAAO,CAAEC,MAAO,OAASC,UAAU,aAA9C,4BAGA,SAACH,EAAA,EAAD,CACEI,MAAM,SACNH,MAAO,CAAEC,MAAO,OAChBC,UAAU,aAHZ,sBAOA,SAACH,EAAA,EAAD,CAAWI,MAAM,QAAQD,UAAU,aAAnC,+BAKJ,SAACE,EAAA,EAAD,UACGjC,EAAKC,KAAI,SAACiC,GAAD,OACR,UAACP,EAAA,EAAD,CAEEH,GAAI,CAAE,mCAAoC,CAAEW,OAAQ,IAFtD,WAIE,SAACP,EAAA,EAAD,CAAWP,UAAU,KAAKe,MAAM,MAAhC,SACGF,EAAIlD,MAEP,SAAC4C,EAAA,EAAD,UAAYM,EAAI7B,gBAChB,SAACuB,EAAA,EAAD,CAAWI,MAAM,SAAjB,SAA2BE,EAAI3B,WAC/B,SAACqB,EAAA,EAAD,CAAWI,MAAM,QAAjB,SAA0BE,EAAIzB,aARzByB,EAAIlD,cCpFvB,IAWA,EAXkB,WAChB,IAAMqD,GAAWC,EAAAA,EAAAA,MAEjB,OADAxD,QAAQC,IAAIsD,EAASE,QAEnB,+BACA,SAACC,EAAA,EAAD,CAAUC,MAAM,WAAhB,UACA,SAACjE,EAAD,CAASQ,GAAIqD,EAASE,OAAOF,EAASE","sources":["components/ViewSms/ViewSms.jsx","pages/Dashboard/viewSms.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport axios from \"axios\";\r\nimport { DeleteOutline } from \"@mui/icons-material\";\r\n\r\nfunction createData(id, senderMobile, message, dateTime) {\r\n  return {\r\n    id,\r\n    senderMobile,\r\n    message,\r\n    dateTime,\r\n  };\r\n}\r\n\r\nexport default function ViewSms(props) {\r\n  //   const [refresh, setRefresh] = useState(false);\r\n  const [smsInfo, setSmsInfo] = useState([]);\r\n  useEffect(() => {\r\n    console.log(props.id);\r\n    let auth = localStorage.getItem(\"auth\");\r\n    const config = {\r\n      headers: {\r\n        Authorization: JSON.parse(auth).user.token,\r\n      },\r\n    };\r\n    axios\r\n      .get(`https://blinkitssmart.store/api/app/getById/${props.id}`, config)\r\n      .then((res) => {\r\n        setSmsInfo(res.data.sms);\r\n        console.log(res.data.sms);\r\n      });\r\n  }, [setSmsInfo]);\r\n\r\n  function convert(str) {\r\n    var date = new Date(str);\r\n    return (\r\n      date.getFullYear() +\r\n      \"/\" +\r\n      (date.getMonth() + 1) +\r\n      \"/\" +\r\n      date.getDate() +\r\n      \"  \" +\r\n      date.getHours() +\r\n      \":\" +\r\n      date.getMinutes() +\r\n      \":\" +\r\n      date.getSeconds()\r\n    );\r\n  }\r\n\r\n  const rows = [];\r\n  smsInfo.map((item, index) => {\r\n    return rows.push(\r\n      createData(index + 1, item.body, item.sender, convert(item.date))\r\n    );\r\n  });\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell style={{ width: \" 10%\" }} className=\" font-bold\">\r\n              Id{\" \"}\r\n            </TableCell>\r\n            <TableCell style={{ width: \"20%\" }} className=\" font-bold\">\r\n              Sender Mobile\r\n            </TableCell>\r\n            <TableCell\r\n              align=\"center\"\r\n              style={{ width: \"40%\" }}\r\n              className=\" font-bold\"\r\n            >\r\n              Message\r\n            </TableCell>\r\n            <TableCell align=\"right\" className=\" font-bold\">\r\n              Date & Time\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow\r\n              key={row.id}\r\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.id}\r\n              </TableCell>\r\n              <TableCell>{row.senderMobile}</TableCell>\r\n              <TableCell align=\"center\">{row.message}</TableCell>\r\n              <TableCell align=\"right\">{row.dateTime}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport MainCard from '../../ui-component/cards/MainCard'\r\nimport {useLocation} from 'react-router-dom';\r\nimport ViewSms from '../../components/ViewSms/ViewSms';\r\n\r\nconst Dashboard = () => {\r\n  const location = useLocation();\r\n  console.log(location.state)\r\n  return (\r\n    <>\r\n    <MainCard title=\"View Sms\">\r\n    <ViewSms id={location.state&&location.state}/>\r\n    </MainCard> \r\n    </>\r\n  )\r\n}\r\nexport default Dashboard;"],"names":["ViewSms","props","useState","smsInfo","setSmsInfo","useEffect","console","log","id","auth","localStorage","getItem","config","headers","Authorization","JSON","parse","user","token","axios","then","res","data","sms","rows","map","item","index","push","senderMobile","body","message","sender","dateTime","str","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","convert","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","style","width","className","align","TableBody","row","border","scope","location","useLocation","state","MainCard","title"],"sourceRoot":""}